// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/2/RAM4K.hdl

/**
 * Memory of 4K registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM4K[address(t)](t)
 *     Write: If load(t-1) then RAM4K[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM4K {

    IN  in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address[9..11], a = da, b = db, c = dc, 
             d = dd, e = de, f = df, g = dg, h = dh);

    RAM512(in = in, load = da, address = address[0..8], out = o1);
    RAM512(in = in, load = db, address = address[0..8], out = o2);
    RAM512(in = in, load = dc, address = address[0..8], out = o3);
    RAM512(in = in, load = dd, address = address[0..8], out = o4);
    RAM512(in = in, load = de, address = address[0..8], out = o5);
    RAM512(in = in, load = df, address = address[0..8], out = o6);
    RAM512(in = in, load = dg, address = address[0..8], out = o7);
    RAM512(in = in, load = dh, address = address[0..8], out = o8);

    Mux8Way16(a = o1, b = o2, c = o3, d = o4, e = o5, f = o6, 
              g = o7, h = o8, sel = address[9..11], out = out);
}
