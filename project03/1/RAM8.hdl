// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/1/RAM8.hdl

/**
 * Memory of 8 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM8[address(t)](t)
 *     Write: If load(t-1) then RAM8[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM8 {

    IN  in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address, a = da, b = db, c = dc, 
             d = dd, e = de, f = df, g = dg, h = dh);
    Register(in = in, load = da, out = ra);
    Register(in = in, load = db, out = rb);
    Register(in = in, load = dc, out = rc);
    Register(in = in, load = dd, out = rd);
    Register(in = in, load = de, out = re);
    Register(in = in, load = df, out = rf);
    Register(in = in, load = dg, out = rg);
    Register(in = in, load = dh, out = rh);
    Mux8Way16(a = ra, b = rb, c = rc, d = rd, e = re, f = rf, 
              g = rg, h = rh, sel = address, out = out);
}
