// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
        return;
    } 

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, and the following extension
     * of action keys:
     * New line = 128 = String.newline()
     * Backspace = 129 = String.backspace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(24576);
    }

    /**								
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar() {
        var char local0, local1;
        do Output.printChar(0);
        while( (local1 = 0) | (local0 > 0)){
            let local0 = Keyboard.keyPressed();
            if( local0 > 0){
                let local1 = local0;
            }
        }
        
        do Output.printChar( String.backSpace() );
        do Output.printChar( local1 );
        
        return local1;
    }

    /**								
     * prints the message on the screen and then reads the next line
     * (until a newline character) from the keyboard and returns its value.
     */
    function String readLine(String message) {
        var char next, enter, back;
        var String line;
        var boolean done;
        let line = String.new(80);
        do Output.printString(message);
        let enter = String.newLine();
        let back = String.backSpace();
        
        while(~done){
            let next = Keyboard.readChar();
            if(next = enter){
                let done = ~0;
            }
            else{
                if( next = back ){
                    do line.eraseLastChar();
                }
                else{
                    let line = line.appendChar(next);
                }
            }
        }
        
        return line;
    }   

    /**								
     * prints the message on the screen and then reads the next line
     * (until a newline character) from the keyboard and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message) {
        var String line;
        var int value;
        let line = Keyboard.readLine(message);
        let value = line.intValue();
        do line.dispose();
        return value;
    }
}
